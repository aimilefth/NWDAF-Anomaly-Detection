services:
  # Kafka for event streaming
  kafka:
    image: bitnami/kafka:latest
    container_name: privateer-kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    restart: unless-stopped
    networks:
      - privateer-net

  # MLflow for model registry
  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    container_name: privateer-mlflow
    ports:
      - "5001:5001"
    volumes:
      - ./mlruns:/mlruns
      - ./mlartifacts:/mlartifacts
    command: mlflow server --host 0.0.0.0 --port 5001
    networks:
      - privateer-net

  # Data Producer
  data-producer:
    build:
      context: .
      dockerfile: Dockerfile.producer
    container_name: privateer-producer
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=raw-network-data
      - CSV_PATH=/app/data/raw/amari_ue_data_merged_with_attack_number.csv
      - INTERVAL=0.01
    volumes:
      - ../data:/app/data:ro
    restart: unless-stopped
    networks:
      - privateer-net

  # Anonymization & Preprocessing Service
  anonymizer:
    build:
      context: .
      dockerfile: Dockerfile.anonymizer
    container_name: privateer-anonymizer
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - INPUT_TOPIC=raw-network-data
      - OUTPUT_TOPIC=preprocessed-data
    volumes:
      - ../privateer_ad:/app/privateer_ad:ro
      - ../scalers:/app/scalers:ro
    restart: unless-stopped
    networks:
      - privateer-net

# demo/docker-compose.yml - detector service update
  anomaly-detector:
    build:
      context: .
      dockerfile: Dockerfile.detector
    container_name: privateer-detector
    depends_on:
      - kafka
      - mlflow
    ports:
      - "8050:8050"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - INPUT_TOPIC=preprocessed-data
      - ALERT_TOPIC=anomaly-alerts
      - PRIVATEER_MLFLOW_TRACKING_URI=http://mlflow:5001
    volumes:
      - ../privateer_ad:/app/privateer_ad:ro
      - ../demo:/app/demo:ro
      - ../models:/app/models:ro
      - ../scalers:/app/scalers:ro
    restart: unless-stopped
    networks:
      - privateer-net
  # Alert Monitor (for testing)
  alert-monitor:
    build:
      context: .
      dockerfile: Dockerfile.monitor
    container_name: privateer-monitor
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - ALERT_TOPIC=anomaly-alerts
    restart: unless-stopped
    networks:
      - privateer-net

networks:
  privateer-net:
    driver: bridge